<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="UserDataModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityType Name="Roles">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Role" Type="varchar" MaxLength="50" Nullable="false" />
        </EntityType>
        <EntityType Name="UserRoleMapping">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="UserId" Type="int" Nullable="false" />
          <Property Name="RoleId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="Users">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="Login" Type="varchar" MaxLength="50" Nullable="false" />
          <Property Name="Password" Type="varchar" MaxLength="50" Nullable="false" />
          <Property Name="Email" Type="varchar" MaxLength="50" Nullable="false" />
        </EntityType>
        <Association Name="fk_roleid">
          <End Role="Roles" Type="Self.Roles" Multiplicity="1" />
          <End Role="UserRoleMapping" Type="Self.UserRoleMapping" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Roles">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="UserRoleMapping">
              <PropertyRef Name="RoleId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="fk_userid">
          <End Role="Users" Type="Self.Users" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="UserRoleMapping" Type="Self.UserRoleMapping" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Users">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="UserRoleMapping">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Function Name="Check_Login" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="LOGINNAME" Type="varchar" Mode="In" />
        </Function>
        <Function Name="DeleteUser" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Login" Type="varchar" Mode="In" />
        </Function>
        <Function Name="GetEmail" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Login" Type="varchar" Mode="In" />
        </Function>
        <Function Name="GetLogin" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Email" Type="varchar" Mode="In" />
        </Function>
        <Function Name="GetRole" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Email" Type="varchar" Mode="In" />
        </Function>
        <Function Name="InsertData" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Login" Type="varchar" Mode="In" />
          <Parameter Name="Password" Type="varchar" Mode="In" />
          <Parameter Name="Email" Type="varchar" Mode="In" />
        </Function>
        <Function Name="isEmailExist" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Email" Type="varchar" Mode="In" />
        </Function>
        <Function Name="isLoginExist" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Login" Type="varchar" Mode="In" />
        </Function>
        <Function Name="isPasswordExist" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Password" Type="varchar" Mode="In" />
        </Function>
        <Function Name="SetRole" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="Login" Type="varchar" Mode="In" />
          <Parameter Name="Role" Type="varchar" Mode="In" />
        </Function>
        <Function Name="UpdateData" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="UpdateText" Type="varchar" Mode="In" />
          <Parameter Name="UpdateOption" Type="int" Mode="In" />
          <Parameter Name="Login" Type="varchar" Mode="In" />
        </Function>
        <Function Name="User_RoleData" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" StoreFunctionName="User&amp;RoleData">
          <Parameter Name="Login" Type="varchar" Mode="In" />
        </Function>
        <Function Name="UserList" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo" />
        <EntityContainer Name="UserDataModelStoreContainer">
          <EntitySet Name="Roles" EntityType="Self.Roles" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="UserRoleMapping" EntityType="Self.UserRoleMapping" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Users" EntityType="Self.Users" Schema="dbo" store:Type="Tables" />
          <AssociationSet Name="fk_roleid" Association="Self.fk_roleid">
            <End Role="Roles" EntitySet="Roles" />
            <End Role="UserRoleMapping" EntitySet="UserRoleMapping" />
          </AssociationSet>
          <AssociationSet Name="fk_userid" Association="Self.fk_userid">
            <End Role="Users" EntitySet="Users" />
            <End Role="UserRoleMapping" EntitySet="UserRoleMapping" />
          </AssociationSet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="UserDataModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityContainer Name="UserDataEntities" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="Roles" EntityType="UserDataModel.Roles" />
          <EntitySet Name="UserRoleMapping" EntityType="UserDataModel.UserRoleMapping" />
          <EntitySet Name="Users" EntityType="UserDataModel.Users" />
          <AssociationSet Name="fk_roleid" Association="UserDataModel.fk_roleid">
            <End Role="Roles" EntitySet="Roles" />
            <End Role="UserRoleMapping" EntitySet="UserRoleMapping" />
          </AssociationSet>
          <AssociationSet Name="fk_userid" Association="UserDataModel.fk_userid">
            <End Role="Users" EntitySet="Users" />
            <End Role="UserRoleMapping" EntitySet="UserRoleMapping" />
          </AssociationSet>
          <FunctionImport Name="Check_Login" ReturnType="Collection(Int32)">
          <Parameter Name="LOGINNAME" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="DeleteUser">
          <Parameter Name="Login" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetRole" ReturnType="Collection(String)">
          <Parameter Name="Email" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="InsertData">
            <Parameter Name="Login" Mode="In" Type="String" />
            <Parameter Name="Password" Mode="In" Type="String" />
            <Parameter Name="Email" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="isEmailExist" ReturnType="Collection(Int32)">
          <Parameter Name="Email" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="isLoginExist" ReturnType="Collection(Int32)">
          <Parameter Name="Login" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="isPasswordExist" ReturnType="Collection(Int32)">
          <Parameter Name="Password" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="SetRole">
            <Parameter Name="Login" Mode="In" Type="String" />
            <Parameter Name="Role" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="User_RoleData" ReturnType="Collection(UserDataModel.User_RoleData_Result1)">
          <Parameter Name="Login" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="UserList" ReturnType="Collection(UserDataModel.UserList_Result)" />
          <FunctionImport Name="UpdateData" ReturnType="Collection(Int32)">
            <Parameter Name="UpdateText" Mode="In" Type="String" />
            <Parameter Name="UpdateOption" Mode="In" Type="Int32" />
            <Parameter Name="Login" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetEmail" ReturnType="Collection(String)">
          <Parameter Name="Login" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="GetLogin" ReturnType="Collection(String)">
            <Parameter Name="Email" Mode="In" Type="String" />
          </FunctionImport>
        </EntityContainer>
        <ComplexType Name="UserListing_Result">
          <Property Type="String" Name="Login" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="true" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="InputUserData">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Login" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Password" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="true" MaxLength="50" />
        </ComplexType>
        <EntityType Name="Roles">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Role" Type="String" Nullable="false" MaxLength="50" FixedLength="false" Unicode="false" />
          <NavigationProperty Name="UserRoleMapping" Relationship="UserDataModel.fk_roleid" FromRole="Roles" ToRole="UserRoleMapping" />
        </EntityType>
        <EntityType Name="UserRoleMapping">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
          <Property Name="RoleId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="Roles" Relationship="UserDataModel.fk_roleid" FromRole="UserRoleMapping" ToRole="Roles" />
          <NavigationProperty Name="Users" Relationship="UserDataModel.fk_userid" FromRole="UserRoleMapping" ToRole="Users" />
        </EntityType>
        <EntityType Name="Users">
          <Key>
            <PropertyRef Name="Id" />
          </Key>
          <Property Name="Id" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Login" Type="String" Nullable="false" MaxLength="50" FixedLength="false" Unicode="false" />
          <Property Name="Password" Type="String" Nullable="false" MaxLength="50" FixedLength="false" Unicode="false" />
          <Property Name="Email" Type="String" Nullable="false" MaxLength="50" FixedLength="false" Unicode="false" />
          <NavigationProperty Name="UserRoleMapping" Relationship="UserDataModel.fk_userid" FromRole="Users" ToRole="UserRoleMapping" />
        </EntityType>
        <Association Name="fk_roleid">
          <End Type="UserDataModel.Roles" Role="Roles" Multiplicity="1" />
          <End Type="UserDataModel.UserRoleMapping" Role="UserRoleMapping" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Roles">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="UserRoleMapping">
              <PropertyRef Name="RoleId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="fk_userid">
          <End Type="UserDataModel.Users" Role="Users" Multiplicity="1" />
          <End Type="UserDataModel.UserRoleMapping" Role="UserRoleMapping" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Users">
              <PropertyRef Name="Id" />
            </Principal>
            <Dependent Role="UserRoleMapping">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <ComplexType Name="IsLogin1_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Login" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Password" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="true" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="UserListing1_Result">
          <Property Type="Int32" Name="Id" Nullable="false" />
          <Property Type="String" Name="Login" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Password" Nullable="true" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="true" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="UserList_Result">
          <Property Type="String" Name="Login" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Role" Nullable="false" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="User_RoleData_Result">
          <Property Type="String" Name="Login" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Role" Nullable="false" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="User_RoleData_Result1">
          <Property Type="String" Name="Login" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Role" Nullable="false" MaxLength="50" />
        </ComplexType>
        <ComplexType Name="UserList_Result1">
          <Property Type="String" Name="Login" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Email" Nullable="false" MaxLength="50" />
          <Property Type="String" Name="Role" Nullable="false" MaxLength="50" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
    <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
  <EntityContainerMapping StorageEntityContainer="UserDataModelStoreContainer" CdmEntityContainer="UserDataEntities">
    <EntitySetMapping Name="Roles">
      <EntityTypeMapping TypeName="IsTypeOf(UserDataModel.Roles)">
        <MappingFragment StoreEntitySet="Roles">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Role" ColumnName="Role" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="UserRoleMapping">
      <EntityTypeMapping TypeName="IsTypeOf(UserDataModel.UserRoleMapping)">
        <MappingFragment StoreEntitySet="UserRoleMapping">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="RoleId" ColumnName="RoleId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Users">
      <EntityTypeMapping TypeName="IsTypeOf(UserDataModel.Users)">
        <MappingFragment StoreEntitySet="Users">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Login" ColumnName="Login" />
          <ScalarProperty Name="Password" ColumnName="Password" />
          <ScalarProperty Name="Email" ColumnName="Email" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="Check_Login" FunctionName="UserDataModel.Store.Check_Login" />
          <FunctionImportMapping FunctionImportName="DeleteUser" FunctionName="UserDataModel.Store.DeleteUser" />
          <FunctionImportMapping FunctionImportName="GetRole" FunctionName="UserDataModel.Store.GetRole" />
          <FunctionImportMapping FunctionImportName="InsertData" FunctionName="UserDataModel.Store.InsertData" />
          <FunctionImportMapping FunctionImportName="isEmailExist" FunctionName="UserDataModel.Store.isEmailExist" />
          <FunctionImportMapping FunctionImportName="isLoginExist" FunctionName="UserDataModel.Store.isLoginExist" />
          <FunctionImportMapping FunctionImportName="isPasswordExist" FunctionName="UserDataModel.Store.isPasswordExist" />
          <FunctionImportMapping FunctionImportName="SetRole" FunctionName="UserDataModel.Store.SetRole" />
          <FunctionImportMapping FunctionImportName="User_RoleData" FunctionName="UserDataModel.Store.User_RoleData">
            <ResultMapping>
              <ComplexTypeMapping TypeName="UserDataModel.User_RoleData_Result1">
                <ScalarProperty Name="Login" ColumnName="Login" />
                <ScalarProperty Name="Email" ColumnName="Email" />
                <ScalarProperty Name="Role" ColumnName="Role" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="UserList" FunctionName="UserDataModel.Store.UserList">
          <ResultMapping>
              <ComplexTypeMapping TypeName="UserDataModel.UserList_Result">
                <ScalarProperty Name="Login" ColumnName="Login" />
                <ScalarProperty Name="Email" ColumnName="Email" />
                <ScalarProperty Name="Role" ColumnName="Role" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="UpdateData" FunctionName="UserDataModel.Store.UpdateData" />
          <FunctionImportMapping FunctionImportName="GetEmail" FunctionName="UserDataModel.Store.GetEmail" />
          <FunctionImportMapping FunctionImportName="GetLogin" FunctionName="UserDataModel.Store.GetLogin" />
          </EntityContainerMapping>
</Mapping></edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="false" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="true" />
        <DesignerProperty Name="UseLegacyProvider" Value="False" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>